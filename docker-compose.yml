version: "3.9"

services:
  web:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: django_web
    env_file:
      - .env
    expose:
      - "8000"
    volumes:
      - ./app:/app:delegated
      - ./app/media:/app/media
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"

  db:
    image: postgres:14
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${DJANGO_DB_USER}
      POSTGRES_PASSWORD: ${DJANGO_DB_PASS}
      POSTGRES_DB: ${DJANGO_DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - ./db/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DJANGO_DB_USER} -d ${DJANGO_DB_NAME} -p ${DJANGO_DB_PORT:-5432}"]
      interval: 10s
      timeout: 5s
      retries: 10

  nginx:
    image: nginx:1.27-alpine
    container_name: nginx_proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./app/media:/var/www/media:ro
    depends_on:
      - web

  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=15d"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:v1.8.2
    container_name: node_exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --path.rootfs=/rootfs
      - --collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($|/)
    expose:
      - "9100"
    restart: unless-stopped


  grafana:
    image: grafana/grafana:10.4.5
    container_name: grafana
    env_file:
      - .env
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml:ro
      - ./monitoring/grafana/grafana.ini.tpl:/etc/grafana/grafana.ini.tpl:ro
    expose:
      - "3000"
    command: >
      sh -c 'envsubst < /etc/grafana/grafana.ini.tpl > /etc/grafana/grafana.ini
             && /run.sh'
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  prometheus_data:
  grafana_data: